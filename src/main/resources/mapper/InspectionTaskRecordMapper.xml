<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beiken.saas.platform.mapper.InspectionTaskRecordMapper">
  <resultMap id="BaseResultMap" type="com.beiken.saas.platform.pojo.InspectionTaskRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="inspect_time" jdbcType="TIMESTAMP" property="inspectTime" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column=" inspector" jdbcType="VARCHAR" property="inspector" />
    <result column="conclusion" jdbcType="VARCHAR" property="conclusion" />
    <result column="feedback_problem" jdbcType="VARCHAR" property="feedbackProblem" />
    <result column="attachment" jdbcType="VARCHAR" property="attachment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, creator, modifier, code, inspect_time, department, 
    " inspector", conclusion, feedback_problem, attachment
  </sql>
  <select id="selectByExample" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from inspection_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inspection_task_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from inspection_task_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecordExample">
    delete from inspection_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecord">
    insert into inspection_task_record (id, gmt_create, gmt_modified, 
      creator, modifier, code, 
      inspect_time, department, " inspector", 
      conclusion, feedback_problem, attachment
      )
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{inspectTime,jdbcType=TIMESTAMP}, #{department,jdbcType=VARCHAR}, #{inspector,jdbcType=VARCHAR}, 
      #{conclusion,jdbcType=VARCHAR}, #{feedbackProblem,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecord">
    insert into inspection_task_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="inspectTime != null">
        inspect_time,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="inspector != null">
        " inspector",
      </if>
      <if test="conclusion != null">
        conclusion,
      </if>
      <if test="feedbackProblem != null">
        feedback_problem,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="inspectTime != null">
        #{inspectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="inspector != null">
        #{inspector,jdbcType=VARCHAR},
      </if>
      <if test="conclusion != null">
        #{conclusion,jdbcType=VARCHAR},
      </if>
      <if test="feedbackProblem != null">
        #{feedbackProblem,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecordExample" resultType="java.lang.Long">
    select count(*) from inspection_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update inspection_task_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectTime != null">
        inspect_time = #{record.inspectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.inspector != null">
        " inspector" = #{record.inspector,jdbcType=VARCHAR},
      </if>
      <if test="record.conclusion != null">
        conclusion = #{record.conclusion,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackProblem != null">
        feedback_problem = #{record.feedbackProblem,jdbcType=VARCHAR},
      </if>
      <if test="record.attachment != null">
        attachment = #{record.attachment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update inspection_task_record
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      inspect_time = #{record.inspectTime,jdbcType=TIMESTAMP},
      department = #{record.department,jdbcType=VARCHAR},
      " inspector" = #{record.inspector,jdbcType=VARCHAR},
      conclusion = #{record.conclusion,jdbcType=VARCHAR},
      feedback_problem = #{record.feedbackProblem,jdbcType=VARCHAR},
      attachment = #{record.attachment,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecord">
    update inspection_task_record
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="inspectTime != null">
        inspect_time = #{inspectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="inspector != null">
        " inspector" = #{inspector,jdbcType=VARCHAR},
      </if>
      <if test="conclusion != null">
        conclusion = #{conclusion,jdbcType=VARCHAR},
      </if>
      <if test="feedbackProblem != null">
        feedback_problem = #{feedbackProblem,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beiken.saas.platform.pojo.InspectionTaskRecord">
    update inspection_task_record
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      inspect_time = #{inspectTime,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR},
      " inspector" = #{inspector,jdbcType=VARCHAR},
      conclusion = #{conclusion,jdbcType=VARCHAR},
      feedback_problem = #{feedbackProblem,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>