<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beiken.saas.platform.mapper.InspectTaskMapper">
  <resultMap id="BaseResultMap" type="com.beiken.saas.platform.pojo.InspectTaskDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="task_code" jdbcType="VARCHAR" property="taskCode" />
    <result column="inspect_plan_code" jdbcType="VARCHAR" property="inspectPlanCode" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="rig_id" jdbcType="BIGINT" property="rigId" />
    <result column="rig_code" jdbcType="VARCHAR" property="rigCode" />
    <result column="inspect_user_id" jdbcType="BIGINT" property="inspectUserId" />
    <result column="inspect_user_name" jdbcType="VARCHAR" property="inspectUserName" />
    <result column="quickly" jdbcType="INTEGER" property="quickly" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, name, task_code, inspect_plan_code, start_time, end_time, 
    finish_time, status, rig_id, rig_code, inspect_user_id, inspect_user_name, quickly, 
    dept_id, dept_name
  </sql>
  <select id="selectByExample" parameterType="com.beiken.saas.platform.pojo.InspectTaskDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sft_inspect_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sft_inspect_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sft_inspect_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.beiken.saas.platform.pojo.InspectTaskDOExample">
    delete from sft_inspect_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.beiken.saas.platform.pojo.InspectTaskDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sft_inspect_task (gmt_create, gmt_modified, name, 
      task_code, inspect_plan_code, start_time, 
      end_time, finish_time, status, 
      rig_id, rig_code, inspect_user_id, 
      inspect_user_name, quickly, dept_id, 
      dept_name)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{taskCode,jdbcType=VARCHAR}, #{inspectPlanCode,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{rigId,jdbcType=BIGINT}, #{rigCode,jdbcType=VARCHAR}, #{inspectUserId,jdbcType=BIGINT}, 
      #{inspectUserName,jdbcType=VARCHAR}, #{quickly,jdbcType=INTEGER}, #{deptId,jdbcType=BIGINT}, 
      #{deptName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.beiken.saas.platform.pojo.InspectTaskDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sft_inspect_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="taskCode != null">
        task_code,
      </if>
      <if test="inspectPlanCode != null">
        inspect_plan_code,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="rigId != null">
        rig_id,
      </if>
      <if test="rigCode != null">
        rig_code,
      </if>
      <if test="inspectUserId != null">
        inspect_user_id,
      </if>
      <if test="inspectUserName != null">
        inspect_user_name,
      </if>
      <if test="quickly != null">
        quickly,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="deptName != null">
        dept_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="taskCode != null">
        #{taskCode,jdbcType=VARCHAR},
      </if>
      <if test="inspectPlanCode != null">
        #{inspectPlanCode,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="rigId != null">
        #{rigId,jdbcType=BIGINT},
      </if>
      <if test="rigCode != null">
        #{rigCode,jdbcType=VARCHAR},
      </if>
      <if test="inspectUserId != null">
        #{inspectUserId,jdbcType=BIGINT},
      </if>
      <if test="inspectUserName != null">
        #{inspectUserName,jdbcType=VARCHAR},
      </if>
      <if test="quickly != null">
        #{quickly,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.beiken.saas.platform.pojo.InspectTaskDOExample" resultType="java.lang.Long">
    select count(*) from sft_inspect_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sft_inspect_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.taskCode != null">
        task_code = #{record.taskCode,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectPlanCode != null">
        inspect_plan_code = #{record.inspectPlanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.rigId != null">
        rig_id = #{record.rigId,jdbcType=BIGINT},
      </if>
      <if test="record.rigCode != null">
        rig_code = #{record.rigCode,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectUserId != null">
        inspect_user_id = #{record.inspectUserId,jdbcType=BIGINT},
      </if>
      <if test="record.inspectUserName != null">
        inspect_user_name = #{record.inspectUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.quickly != null">
        quickly = #{record.quickly,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.deptName != null">
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sft_inspect_task
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      task_code = #{record.taskCode,jdbcType=VARCHAR},
      inspect_plan_code = #{record.inspectPlanCode,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      rig_id = #{record.rigId,jdbcType=BIGINT},
      rig_code = #{record.rigCode,jdbcType=VARCHAR},
      inspect_user_id = #{record.inspectUserId,jdbcType=BIGINT},
      inspect_user_name = #{record.inspectUserName,jdbcType=VARCHAR},
      quickly = #{record.quickly,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=BIGINT},
      dept_name = #{record.deptName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.beiken.saas.platform.pojo.InspectTaskDO">
    update sft_inspect_task
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="taskCode != null">
        task_code = #{taskCode,jdbcType=VARCHAR},
      </if>
      <if test="inspectPlanCode != null">
        inspect_plan_code = #{inspectPlanCode,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="rigId != null">
        rig_id = #{rigId,jdbcType=BIGINT},
      </if>
      <if test="rigCode != null">
        rig_code = #{rigCode,jdbcType=VARCHAR},
      </if>
      <if test="inspectUserId != null">
        inspect_user_id = #{inspectUserId,jdbcType=BIGINT},
      </if>
      <if test="inspectUserName != null">
        inspect_user_name = #{inspectUserName,jdbcType=VARCHAR},
      </if>
      <if test="quickly != null">
        quickly = #{quickly,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null">
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beiken.saas.platform.pojo.InspectTaskDO">
    update sft_inspect_task
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      task_code = #{taskCode,jdbcType=VARCHAR},
      inspect_plan_code = #{inspectPlanCode,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      rig_id = #{rigId,jdbcType=BIGINT},
      rig_code = #{rigCode,jdbcType=VARCHAR},
      inspect_user_id = #{inspectUserId,jdbcType=BIGINT},
      inspect_user_name = #{inspectUserName,jdbcType=VARCHAR},
      quickly = #{quickly,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=BIGINT},
      dept_name = #{deptName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>