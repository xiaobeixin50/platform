<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beiken.saas.platform.mapper.HiddenDangerCheckMapper">
  <resultMap id="BaseResultMap" type="com.beiken.saas.platform.pojo.HiddenDangerCheckDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="danger_code" jdbcType="VARCHAR" property="dangerCode" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="extra" jdbcType="VARCHAR" property="extra" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="inspect_user_id" jdbcType="BIGINT" property="inspectUserId" />
    <result column="inspect_user_name" jdbcType="VARCHAR" property="inspectUserName" />
    <result column="inspect_user_role" jdbcType="VARCHAR" property="inspectUserRole" />
    <result column="inspect_user_dept" jdbcType="VARCHAR" property="inspectUserDept" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, danger_code, type, extra, status, inspect_user_id, 
    inspect_user_name, inspect_user_role, inspect_user_dept
  </sql>
  <select id="selectByExample" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sft_hidden_danger_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sft_hidden_danger_check
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sft_hidden_danger_check
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDOExample">
    delete from sft_hidden_danger_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDO">
    insert into sft_hidden_danger_check (id, gmt_create, gmt_modified, 
      danger_code, type, extra, 
      status, inspect_user_id, inspect_user_name, 
      inspect_user_role, inspect_user_dept)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{dangerCode,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{extra,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{inspectUserId,jdbcType=BIGINT}, #{inspectUserName,jdbcType=VARCHAR}, 
      #{inspectUserRole,jdbcType=VARCHAR}, #{inspectUserDept,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDO">
    insert into sft_hidden_danger_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="dangerCode != null">
        danger_code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="extra != null">
        extra,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="inspectUserId != null">
        inspect_user_id,
      </if>
      <if test="inspectUserName != null">
        inspect_user_name,
      </if>
      <if test="inspectUserRole != null">
        inspect_user_role,
      </if>
      <if test="inspectUserDept != null">
        inspect_user_dept,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="dangerCode != null">
        #{dangerCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="inspectUserId != null">
        #{inspectUserId,jdbcType=BIGINT},
      </if>
      <if test="inspectUserName != null">
        #{inspectUserName,jdbcType=VARCHAR},
      </if>
      <if test="inspectUserRole != null">
        #{inspectUserRole,jdbcType=VARCHAR},
      </if>
      <if test="inspectUserDept != null">
        #{inspectUserDept,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDOExample" resultType="java.lang.Long">
    select count(*) from sft_hidden_danger_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sft_hidden_danger_check
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dangerCode != null">
        danger_code = #{record.dangerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.extra != null">
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.inspectUserId != null">
        inspect_user_id = #{record.inspectUserId,jdbcType=BIGINT},
      </if>
      <if test="record.inspectUserName != null">
        inspect_user_name = #{record.inspectUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectUserRole != null">
        inspect_user_role = #{record.inspectUserRole,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectUserDept != null">
        inspect_user_dept = #{record.inspectUserDept,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sft_hidden_danger_check
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      danger_code = #{record.dangerCode,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      extra = #{record.extra,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      inspect_user_id = #{record.inspectUserId,jdbcType=BIGINT},
      inspect_user_name = #{record.inspectUserName,jdbcType=VARCHAR},
      inspect_user_role = #{record.inspectUserRole,jdbcType=VARCHAR},
      inspect_user_dept = #{record.inspectUserDept,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDO">
    update sft_hidden_danger_check
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="dangerCode != null">
        danger_code = #{dangerCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="inspectUserId != null">
        inspect_user_id = #{inspectUserId,jdbcType=BIGINT},
      </if>
      <if test="inspectUserName != null">
        inspect_user_name = #{inspectUserName,jdbcType=VARCHAR},
      </if>
      <if test="inspectUserRole != null">
        inspect_user_role = #{inspectUserRole,jdbcType=VARCHAR},
      </if>
      <if test="inspectUserDept != null">
        inspect_user_dept = #{inspectUserDept,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beiken.saas.platform.pojo.HiddenDangerCheckDO">
    update sft_hidden_danger_check
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      danger_code = #{dangerCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      extra = #{extra,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      inspect_user_id = #{inspectUserId,jdbcType=BIGINT},
      inspect_user_name = #{inspectUserName,jdbcType=VARCHAR},
      inspect_user_role = #{inspectUserRole,jdbcType=VARCHAR},
      inspect_user_dept = #{inspectUserDept,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>